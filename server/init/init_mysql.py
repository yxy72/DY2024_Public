import MySQLdb
import numpy as np
import os
import tensorflow as tf
import sys

delete = [
    "truncate `app_qualityitem`",
    "truncate `app_option`",
    "truncate `app_registerserialnumber`",
    "truncate `app_userinfo`",
    "truncate `app_usermodel`",
]
# model_url = "%s/%s"%(settings.MEDIA_ROOT,models.QualityItem.objects.filter(uid=uid).first().model)

if __name__ == "__main__":


    if(len(sys.argv[:])!=5):
        print("ERROR: parameters should be 4: type this: \n python init_mysql.py 'ip' port 'mysqlUser' 'mysqlPwd'")
        exit(0)
    # 运行 python init_mysql.py "127.0.0.1" 3306 "root" "password"



    connection = MySQLdb.connect(
        host = sys.argv[1],
        port = int(sys.argv[2]),
        user = sys.argv[3],
        # passwd="650960",
        passwd = sys.argv[4],
        db="dy",
        charset="utf8",
    )
    r = connection.cursor()

    def getRawData(uid="0000"):
        if(uid=="0001"):
            return {
                "uid": uid,
                "data":[0.1213, 0.1235, 0.1256, 0.1279, 0.1301, 0.1324, 0.1347, 0.1371, 0.1394, 0.1419, 0.1443, 0.1468, 0.1493, 0.1519, 0.1545, 0.1571, 0.1598, 0.1625, 0.1652, 0.168, 0.1708, 0.1736, 0.1765, 0.1795, 0.1824, 0.1854, 0.1885, 0.1915, 0.1947, 0.1978, 0.201, 0.2042, 0.2075, 0.2108, 0.2142, 0.2176, 0.221, 0.2244, 0.2279, 0.2315, 0.2351, 0.2387, 0.2423, 0.246, 0.2497, 0.2535, 0.2573, 0.2611, 0.265, 0.2689, 0.2729, 0.2769, 0.2809, 0.285, 0.2891, 0.2932, 0.2973, 0.3015, 0.3058, 0.31, 0.3143, 0.3186, 0.323, 0.3274, 0.3318, 0.3363, 0.3407, 0.3452, 0.3498, 0.3543, 0.3589, 0.3635, 0.3682, 0.3729, 0.3775, 0.3823, 0.387, 0.3917, 0.3965, 0.4013, 0.4061, 0.411, 0.4158, 0.4207, 0.4256, 0.4305, 0.4354, 0.4403, 0.4452, 0.4502, 0.4551, 0.4601, 0.4651, 0.47, 0.475, 0.48, 0.485, 0.49, 0.495, 0.5, 0.5, 0.505, 0.51, 0.515, 0.52, 0.525, 0.53, 0.5349, 0.5399, 0.5449, 0.5498, 0.5548, 0.5597, 0.5646, 0.5695, 0.5744, 0.5793, 0.5842, 0.589, 0.5939, 0.5987, 0.6035, 0.6083, 0.613, 0.6177, 0.6225, 0.6271, 0.6318, 0.6365, 0.6411, 0.6457, 0.6502, 0.6548, 0.6593, 0.6637, 0.6682, 0.6726, 0.677, 0.6814, 0.6857, 0.69, 0.6942, 0.6985, 0.7027, 0.7068, 0.7109, 0.715, 0.7191, 0.7231, 0.7271, 0.7311, 0.735, 0.7389, 0.7427, 0.7465, 0.7503, 0.754, 0.7577, 0.7613, 0.7649, 0.7685, 0.7721, 0.7756, 0.779, 0.7824, 0.7858, 0.7892, 0.7925, 0.7958, 0.799, 0.8022, 0.8053, 0.8085, 0.8115, 0.8146, 0.8176, 0.8205, 0.8235, 0.8264, 0.8292, 0.832, 0.8348, 0.8375, 0.8402, 0.8429, 0.8455, 0.8481, 0.8507, 0.8532, 0.8557, 0.8581, 0.8606, 0.8629, 0.8653, 0.8676, 0.8699, 0.8721, 0.8744, 0.8765, 0.8787, 0.8808, 0.8829, 0.8849, 0.887, 0.8889, 0.8909, 0.8928, 0.8947, 0.8966, 0.8984, 0.9002, 0.902, 0.9038, 0.9055, 0.9072, 0.9089, 0.9105, 0.9121, 0.9137, 0.9153, 0.9168, 0.9183, 0.9198, 0.9213, 0.9227, 0.9241, 0.9255, 0.9269, 0.9282, 0.9296, 0.9309, 0.9321, 0.9334, 0.9346, 0.9358, 0.937, 0.9382, 0.9393, 0.9405, 0.9416, 0.9427, 0.9437, 0.9448, 0.9458, 0.9468, 0.9478, 0.9488, 0.9498, 0.9507, 0.9517, 0.9526, 0.9535, 0.9543, 0.9552, 0.9561, 0.9569, 0.9577, 0.9585, 0.9593, 0.9601, 0.9608, 0.9616, 0.9623, 0.963, 0.9637, 0.9644, 0.9651, 0.9658, 0.9664, 0.9671, 0.9677, 0.9683, 0.9689, 0.9695, 0.9701, 0.9707, 0.9713, 0.9718, 0.9723, 0.9729, 0.9734, 0.9739, 0.9744, 0.9749, 0.9754, 0.9759, 0.9763, 0.9768, 0.9772, 0.9777, 0.9781, 0.9785, 0.979, 0.9794, 0.9798, 0.9802, 0.9805, 0.9809, 0.9813, 0.9817, 0.982, 0.9824, 0.9827, 0.983, 0.9834, 0.9837, 0.984, 0.9843, 0.9846, 0.9849, 0.9852, 0.9855, 0.9858, 0.9861, 0.9863, 0.9866, 0.9869, 0.9871, 0.9874, 0.9876, 0.9879, 0.9881, 0.9883, 0.9886, 0.9888, 0.989, 0.9892, 0.9894, 0.9896, 0.9898, 0.99, 0.9902, 0.9904, 0.9906, 0.9908, 0.991, 0.9912, 0.9913, 0.9915, 0.9917, 0.9918, 0.992, 0.9922, 0.9923, 0.9925, 0.9926, 0.9928, 0.9929, 0.993, 0.9932, 0.9933, 0.9934, 0.9936, 0.9937, 0.9938, 0.9939, 0.9941, 0.9942, 0.9943, 0.9944, 0.9945, 0.9946, 0.9947, 0.9948, 0.9949, 0.995, 0.9951, 0.9952, 0.9953, 0.9954, 0.9955, 0.9956, 0.9957, 0.9958, 0.9958, 0.9959, 0.996, 0.9961, 0.9962, 0.9962, 0.9963, 0.9964, 0.9965, 0.9965, 0.9966, 0.9967, 0.9967, 0.9968, 0.9969, 0.9969, 0.997, 0.997, 0.9971, 0.9972, 0.9972, 0.9973, 0.9973, 0.9974, 0.9974],
            }
        elif(uid=="0002"):
            return {
                "uid": uid,
                 "data":[0.7805,0.6260,0.2195,0.9593,0.3902,0.4715,0.4309,0.7967,0.9512,0.0976,0.5935,0.4390,0.7236,0.6585,0.3008,0.9187,0.0569,0.4065,0.1707,0.9431,0.4878,0.6098,0.9837,0.9024,0.6992,0.3008,0.4390,0.2520,0.4390,0.5528,0.9350,0.2683,0.8049,0.5610,0.6260,0.3821,0.3496,0.4472,0.1220,0.8699,0.7886,0.5528,0.5366,0.6585,0.0488,0.5366,0.0081,0.7561,0.3089,0.7398,0.4634,0.3415,0.1057,0.7805,0.8780,0.4715,0.1301,0.9268,0.8374,0.8618,0.1382,0.6016,0.3415,0.1220,0.4553,0.7642,0.7398,0.4390,0.2520,0.7886,0.1463,0.7073,0.4715,0.4959,0.3008,0.8537,0.9756,0.6829,0.7561,0.6179,0.3333,0.5854,0.9431,0.5285,0.1463,0.8780,0.3333,0.4878,0.3902,0.0488,0.6585,0.5528,0.1220,0.3252,0.0244,0.0488,0.8293,0.3252,0.1138,0.8049,0.1951,0.8780,0.6098,0.3659,0.5854,0.4959,0.3496,0.3415,0.6504,0.6829,0.0569,0.2114,0.1789,0.4797,0.8943,0.7805,0.8130,0.8618,0.8699,0.7561,0.1789,0.9187,0.0163,0.5935,0.2114,0.6016,0.1138,0.0000,0.6341,0.7073,0.3902,0.1870,0.7724,0.0650,0.3984,0.8618,0.4634,0.9106,0.7886,0.2520,0.4553,0.7805,0.8862,0.3577,0.5447,0.0894,0.1057,0.4390,0.2683,0.9431,0.3496,0.9593,0.5366,0.0569,0.4146,0.7236,0.1382,0.4390,0.6667,0.6992,0.9756,0.1545,0.4228,0.1951,0.0325,0.6179,0.8130,0.4553,0.8862,0.2602,0.4146,0.2033,0.8862,0.5610,0.1951,0.5772,0.9593,0.3902,0.4959,0.0569,0.1545,0.3089,0.2276,0.2033,0.3333,0.8618,0.6341,0.0407,0.9675,0.8455,0.0163,0.6911,0.7805,0.4553,0.5447,0.4634,0.8618,0.2602,0.6016,0.0569,0.7967,0.9675,0.9593,0.6992,0.6423,0.5203,0.9187,0.8455,0.1220,0.1463,0.9187,0.1870,0.2846,0.6179,0.0163,0.6260,0.9431,0.2846,0.0163,0.5691,0.2764,0.1220,0.1951,0.5041,0.1951,0.3984,0.5691,0.3415,0.5772,0.1951,0.0732,0.1463,0.9187,0.8049,0.6341,0.5528,0.0407,0.6341,0.4228,0.3659,0.5122,0.0894,0.2927,0.3984,0.2602,0.5528,0.8862,0.5935,0.9431,0.5528,0.0407,0.2846,0.3333,0.3333,0.2195,0.9675,0.7480,0.6829,0.9593,0.7480,0.9024,0.8130,0.4634,0.0569,0.5610,0.6829,0.2114,0.5122,0.7398,0.5854,0.2276,0.8780,0.0813,0.3171,0.3740,0.0407,0.2927,0.0976,0.8699,0.7886,0.2033,0.1707,0.0244,0.3496,0.9756,0.6992,0.9675,0.9024,0.6748,0.1626,0.0325,0.8943,0.7317,0.3496,0.8130,0.2195,0.5447,0.7724,0.7886,0.2927,0.9593,0.1382,0.3415,0.4472,0.5203,0.1951,0.8211,0.2602,0.7805,0.0000,0.2195,0.9106,0.1382,0.6667,0.8943,0.8049,0.8537,0.1707,0.5691,0.7154,0.3659,0.8211,0.7480,0.9268,0.9756,0.2114,0.5447,0.3415,0.0000,0.7561,0.8374,0.3740,0.1382,0.7398,0.2114,0.4959,0.6179,0.1301,0.4715,0.7724,0.1626,0.1301,0.1220,0.0976,0.3577,0.3008,0.1220,0.0163,0.9431,0.2358,0.5203,0.7805,0.8699,0.9593,0.2276,0.0569,0.6423,0.0976,0.1789,0.3171,0.6260,0.2439,0.4715,0.7398,0.6585,0.0407,0.7886,0.5447,0.7805,0.9106,0.8699,0.3902,0.3415,0.2602,0.8211,0.5772,0.4065,0.4146,0.0813,0.1301,0.8374,0.8618,0.5691,0.4959,0.0325,0.9106,0.7561,0.9756,0.3496,0.8130,0.3252,0.2358,0.7398,0.4065,0.2195,0.1789,0.0000,0.2114,0.2114] }
        elif(uid=="0003"):
            return {
                "uid": uid,
                 "data":[0.2143,0.6429,0.1429,0.2857,0.2857,0.2143,0.7143,0.3571,0.7143,0.7143,0.4286,0.8571,0.5000,0.2857,0.2857,0.1429,0.5000,0.2857,0.6429,0.7857,0.4286,0.1429,0.3571,0.4286,0.3571,0.5000,0.7857,0.4286,0.2143,0.7857,0.7857,0.5000,0.7143,0.7857,0.8571,0.4286,0.8571,0.5714,0.7143,0.4286,0.5714,0.8571,0.2143,0.5000,0.2857,0.8571,0.2857,0.2857,0.7143,0.5000,0.2143,0.5714,0.7143,0.3571,0.2857,0.2143,0.6429,0.3571,0.2857,0.2857,0.1429,0.4286,0.4286,0.6429,0.2857,0.5000,0.2143,0.6429,0.4286,0.5714,0.7857,0.5000,0.7143,0.4286,0.5000,0.2857,0.2857,0.5714,0.4286,0.1429,0.6429,0.3571,0.5000,0.8571,0.2857,0.5714,0.5714,0.5000,0.7143,0.8571,0.2857,0.2143,0.2143,0.5000,0.2143,0.6429,0.2143,0.2857,0.5714,0.6429,0.5714,0.4286,0.4286,0.4286,0.5714,0.6429,0.5714,0.4286,0.2143,0.7857,0.3571,0.2143,0.2143,0.4286,0.2857,0.2143,0.7143,0.1429,0.4286,0.2857,0.7143,0.2857,0.4286,0.2857,0.4286,0.8571,0.5000,0.7857,0.1429,0.1429,0.5714,0.2857,0.2143,0.5000,0.5714,0.1429,0.2143,0.7143,0.2143,0.3571,0.7143,0.6429,0.2143,0.7857,0.5714,0.5714,0.4286,0.8571,0.3571,0.7143,0.4286,0.3571,0.5714,0.7143,0.6429,0.7857,0.7857,0.2857,0.1429,0.2857,0.6429,0.3571,0.1429,0.3571,0.1429,0.2143,0.8571,0.4286,0.1429,0.6429,0.3571,0.2143,0.4286,0.2857,0.7857,0.2857,0.8571,0.1429,0.1429,0.7857,0.8571,0.1429,0.1429,0.3571,0.7857,0.1429,0.8571,0.2857,0.2857,0.5714,0.7143,0.5000,0.5714,0.1429,0.7857,0.7857,0.2143,0.7143,0.3571,0.4286,0.5000,0.7857,0.5000,0.2143,0.1429,0.6429,0.5714,0.5000,0.8571,0.5714,0.2857,0.7143,0.7143,0.2143,0.3571,0.2143,0.4286,0.7857,0.5000,0.7857,0.2857,0.7857,0.5000,0.2857,0.8571,0.3571,0.8571,0.5714,0.6429,0.8571,0.5000,0.5000,0.1429,0.3571,0.1429,0.2857,0.2857,0.1429,0.5000,0.1429,0.3571,0.1429,0.8571,0.8571,0.2143,0.7143,0.5714,0.5714,0.2857,0.8571,0.3571,0.7143,0.1429,0.1429,0.2857,0.1429,0.8571,0.5714,0.5714,0.8571,0.3571,0.2857,0.2857,0.7143,0.3571,0.5714,0.7857,0.8571,0.5714,0.7143,0.6429,0.8571,0.2143,0.7143,0.7857,0.7857,0.7143,0.7857,0.2143,0.7143,0.2143,0.3571,0.5000,0.5714,0.1429,0.7143,0.2143,0.5714,0.3571,0.1429,0.8571,0.4286,0.1429,0.7143,0.5714,0.6429,0.2143,0.2143,0.4286,0.2857,0.6429,0.6429,0.7857,0.2143,0.8571,0.3571,0.3571,0.2857,0.7143,0.5000,0.5000,0.5714,0.1429,0.6429,0.3571,0.7143,0.8571,0.3571,0.3571,0.4286,0.5000,0.7143,0.1429,0.4286,0.2143,0.2143,0.2143,0.5714,0.6429,0.5714,0.3571,0.7857,0.1429,0.2143,0.4286,0.7143,0.7143,0.6429,0.1429,0.3571,0.1429,0.1429,0.8571,0.8571,0.2143,0.1429,0.8571,0.8571,0.3571,0.6429,0.2143,0.0714,0.1429,0.2857,0.2143,0.2143,0.7857,0.2143,0.5714,0.5000,0.2143,0.7857,0.8571,0.2143,0.5000,0.6429,0.3571,0.7143,0.7857,0.4286,0.1429,0.5714,0.0000,0.1429,0.5000,0.4286,0.5000,0.2857,0.7857,0.2143,0.1429,0.3571,0.2857,0.3571,0.1429,0.4286,0.6429,0.6429,0.2143,0.2857,0.2857,0.3571,0.1429,0.2857,0.8571,0.6429,0.2857,0.3571,0.5714]}
        elif(uid=="0004"):
            return {
                "uid": uid,
                 "data":[0.6667,0.6667,0.8333,0.1667,1.0000,0.6667,0.6667,0.0000,0.6667,0.8333,0.0000,0.1667,0.3333,0.1667,1.0000,0.6667,0.5000,0.0000,0.5000,0.5000,1.0000,0.8333,1.0000,0.0000,0.0000,0.8333,0.5000,0.0000,0.5000,0.5000,1.0000,0.5000,0.8333,0.1667,0.3333,1.0000,0.5000,0.3333,0.0000,1.0000,1.0000,0.0000,0.6667,0.3333,0.6667,0.1667,0.5000,0.0000,1.0000,0.8333,0.6667,0.5000,0.1667,1.0000,1.0000,0.6667,0.0000,0.5000,0.1667,1.0000,0.5000,0.8333,0.5000,0.8333,0.6667,0.0000,0.8333,0.0000,0.8333,0.1667,0.8333,0.5000,0.8333,0.0000,0.8333,0.1667,0.6667,0.8333,0.0000,0.1667,0.6667,0.3333,0.1667,0.6667,0.5000,0.1667,0.8333,0.1667,0.8333,0.1667,0.0000,0.0000,0.8333,0.5000,0.8333,0.5000,0.8333,0.8333,0.8333,0.6667,0.8333,0.1667,0.3333,1.0000,0.8333,0.5000,0.5000,0.5000,0.8333,0.1667,1.0000,0.8333,0.5000,1.0000,0.6667,0.5000,0.3333,1.0000,0.6667,0.8333,0.0000,0.5000,0.8333,0.5000,0.5000,1.0000,0.0000,0.3333,0.1667,0.8333,0.1667,0.6667,1.0000,0.1667,0.5000,0.3333,0.3333,0.0000,0.8333,0.5000,0.8333,0.6667,0.3333,0.3333,1.0000,0.1667,0.6667,0.5000,0.6667,0.0000,0.6667,0.6667,0.8333,0.6667,0.8333,0.5000,0.1667,0.8333,1.0000,0.8333,1.0000,0.8333,0.3333,0.3333,0.6667,0.0000,0.6667,0.8333,0.1667,0.0000,0.6667,0.0000,0.6667,0.3333,0.1667,0.1667,0.0000,1.0000,0.0000,0.1667,1.0000,0.1667,0.1667,0.1667,1.0000,0.0000,0.5000,1.0000,0.6667,0.0000,0.3333,0.8333,0.5000,0.5000,0.6667,1.0000,0.0000,0.0000,0.1667,0.8333,1.0000,0.0000,0.6667,0.6667,0.3333,0.1667,1.0000,0.3333,1.0000,0.8333,0.1667,0.5000,0.0000,0.3333,1.0000,0.0000,0.1667,0.8333,0.1667,1.0000,0.5000,0.1667,0.8333,1.0000,0.5000,0.5000,0.3333,0.0000,0.0000,0.3333,1.0000,1.0000,0.3333,0.0000,0.1667,0.5000,0.6667,1.0000,0.5000,1.0000,0.3333,0.5000,0.6667,0.5000,1.0000,0.5000,0.3333,0.5000,0.5000,0.6667,0.8333,0.0000,0.3333,1.0000,0.8333,0.6667,0.0000,0.8333,1.0000,0.8333,0.0000,0.1667,0.1667,0.8333,0.0000,0.6667,0.1667,0.5000,0.6667,0.8333,0.1667,0.1667,0.1667,0.8333,0.5000,0.5000,1.0000,0.3333,0.6667,0.3333,0.8333,0.0000,0.3333,0.1667,0.1667,1.0000,0.1667,0.1667,0.5000,0.6667,0.1667,1.0000,1.0000,0.5000,0.5000,0.0000,0.0000,0.6667,0.3333,0.1667,1.0000,1.0000,0.1667,0.0000,0.5000,0.3333,0.5000,0.6667,0.5000,0.1667,0.6667,0.3333,0.6667,0.6667,0.5000,0.8333,0.8333,1.0000,0.3333,0.0000,0.5000,0.1667,0.6667,0.3333,0.5000,1.0000,0.0000,0.3333,0.8333,1.0000,0.1667,0.8333,0.5000,1.0000,0.6667,0.8333,0.6667,0.1667,0.5000,0.3333,0.0000,0.5000,0.1667,0.1667,0.1667,0.5000,0.3333,0.8333,0.5000,1.0000,0.0000,0.5000,0.8333,0.6667,0.3333,0.0000,0.6667,0.8333,0.5000,1.0000,0.3333,0.8333,0.0000,0.6667,0.0000,0.8333,0.3333,0.6667,0.3333,0.3333,0.5000,0.3333,0.1667,0.1667,0.6667,0.0000,0.3333,0.6667,0.1667,1.0000,0.8333,0.5000,0.0000,0.3333,0.0000,0.8333,0.8333,0.8333,0.5000,0.6667,1.0000,1.0000,0.6667,0.0000,0.3333,0.0000,0.6667,0.3333,0.1667]}
        elif(uid=="0005"):
            return {
                "uid": uid,
                 "data":[0.27,0.63,0.64,0.04,0.12,0.41,0.27,0.2,0.82,0.52,0.92,0.05,0.27,0.88,0.97,0.5,0.41,0.8,0.36,0.21,0.27,0.45,0.64,0.9,0.64,0.01,0.7,0.89,0.4,0.84,0.46,0.1,0.73,0.06,0.67,0.91,0.06,0.69,0.11,0.92,0.02,0.94,0.02,0.14,0.2,0.95,0.99,0.95,0.81,0.02,0.17,0.59,0.99,0.25,0.18,0.32,0.76,0.3,0.48,0.95,0.85,0.82,0.67,0.36,0.1,0.51,1,0.22,0.25,0.92,0.67,0.03,0.07,0.88,0.14,0.85,0.5,0.14,0.91,0.16,0.91,0.11,0.27,0.53,0.78,0.99,0.91,0.48,0.28,0.67,0.14,0.78,0.42,0.3,0.23,0.85,0.01,0.9,0.03,0.49,0.41,0.08,0.92,0.87,0.6,0.09,0.58,0.43,0.59,0.32,0.52,0.3,0.99,0.06,0.9,0.03,0.6,0.68,0.32,0.27,0.13,0.77,0.67,0.98,0.19,0.65,0.97,0.06,0.43,0.14,0.07,0.68,0.16,0.24,0.59,0.74,0.07,0.56,0.07,0.31,0.59,0,0.04,0.59,0.85,0.76,0.03,0.75,0.01,0.05,0.12,0.55,0.62,0.93,0.49,0.93,0.79,0.61,0.63,0.57,0.16,0.88,0.07,0.94,0.73,0.68,0.65,0.5,0.7,0.82,0.67,0.72,0.9,0.98,0.63,0.41,0.99,0.57,0.37,0.33,0.47,0.62,0.21,0.08,0.52,0.51,0.92,0.96,0.42,0.62,0.09,0.77,0.16,0.15,0.99,0,0.56,0.74,0.09,0.02,0.48,0.6,0.44,0.57,0.36,0.55,0.35,0.7,0.69,0.11,0.75,0.67,0.17,0.56,0.24,0.83,0.09,0.95,0.82,0.05,0.4,0.16,1,0.55,0.99,0.37,0.35,0.08,0.78,0.72,0.08,0.97,0.56,0.01,0.1,0.6,0.39,0.18,0.23,0.63,0.04,0.19,0.31,0.21,0.18,0.42,0.96,0.98,0.49,0.77,0.41,0.34,0.78,0.64,0.18,1,0.29,0.63,0.33,0.1,0.96,0.35,0.88,0.31,0.34,0.93,0.03,0.81,0.7,0.79,0.12,0.98,0.11,0.22,0.29,0.2,0.97,0.78,0.48,0.21,0.25,0.73,0.4,0.65,0.36,0.4,0.09,0.66,0.25,0.81,0.06,0.26,0.13,0.82,0.56,0.77,0.33,0.17,0.66,0.59,0.62,0.79,0.85,0.45,0.15,0.05,0.18,0.42,0.22,0.08,0.23,0.2,0.85,0.92,0.41,0.61,0.03,0.92,0.1,0.23,0.44,0.16,0.76,0.46,0.74,0.29,0.27,0.17,0.74,1,0.45,0.39,0.67,0.3,0.54,0.16,0.56,0.19,0.79,0.61,0.03,0.84,0.79,0.88,0.37,0.74,0.5,0.78,0.82,0.97,0.83,0.12,0.86,0.5,0.13,0.76,0.16,0.79,0.06,0.36,0.4,0.79,0.21,0.62,0,0.3,0.4,0.53,0.63,0.25,0.51,0.54,0.01,0.35,0.98,0.47,0.07,0.54,0,0.5,0.91,0.32,0.56,0.07,0.25,0.05,0.15,0.54,0.21,0.73,0.49,0.77,0.83,0.9,0.58,0.13,0.96,0.43,0.54]}
        elif(uid=="0006"):
            return {
                "uid": uid,
                "data":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
                 }
        elif(uid=="0007"):
            return {
                "uid": uid,
                "data":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
                 }
    def PUSH_RAWDATA(uid,data,isBinary):
        # try:
        model_url = "../static/models/quality/"+uid+".h5"

        if(not os.path.exists(model_url)):
            return {"status":False,"content":"no exist"}
        model = tf.keras.models.load_model(model_url)
        XDATA = np.reshape(data,(1,len(data),1))
        y_pred = model.predict(XDATA)
        if(isBinary):
            y_pred_binary = []
            for i in range(len(y_pred)):
                y_pred_binary.append([0 if i <0.5 else 1  for i in y_pred[i]])
            y_pred = y_pred_binary
        x = XDATA.reshape(1,len(data))
        
        # return "success",np.around(np.concatenate((x,y_pred), axis=1),4).tolist()
        return {"status":True,"content":np.around(np.concatenate((x,y_pred), axis=1),4).tolist()}
        # except:
        #     return {"status":False,"content":"error"}
    
    
    max_= [957.99,1.23,3.3,6.66,1,1,1]
    min_= [953.66,0,1.1,5.55,0,0,0]

    data0 = [954.19, 954.2, 954.21, 954.22, 954.23, 954.24, 954.25, 954.26, 954.27, 954.28, 954.3, 954.31, 954.32, 954.33, 954.34, 954.35, 954.36, 954.38, 954.39, 954.4, 954.41, 954.42, 954.44, 954.45, 954.46, 954.48, 954.49, 954.5, 954.52, 954.53, 954.54, 954.56, 954.57, 954.59, 954.6, 954.62, 954.63, 954.65, 954.66, 954.68, 954.69, 954.71, 954.73, 954.74, 954.76, 954.77, 954.79, 954.81, 954.82, 954.84, 954.86, 954.88, 954.89, 954.91, 954.93, 954.95, 954.97, 954.98, 955.0, 955.02, 955.04, 955.06, 955.08, 955.1, 955.12, 955.14, 955.15, 955.17, 955.19, 955.21, 955.23, 955.25, 955.27, 955.29, 955.32, 955.34, 955.36, 955.38, 955.4, 955.42, 955.44, 955.46, 955.48, 955.5, 955.52, 955.55, 955.57, 955.59, 955.61, 955.63, 955.65, 955.67, 955.7, 955.72, 955.74, 955.76, 955.78, 955.8, 955.82, 955.82, 955.85, 955.87, 955.89, 955.91, 955.93, 955.95, 955.98, 956.0, 956.02, 956.04, 956.06, 956.08, 956.1, 956.13, 956.15, 956.17, 956.19, 956.21, 956.23, 956.25, 956.27, 956.29, 956.31, 956.33, 956.36, 956.38, 956.4, 956.42, 956.44, 956.46, 956.48, 956.5, 956.51, 956.53, 956.55, 956.57, 956.59, 956.61, 956.63, 956.65, 956.67, 956.68, 956.7, 956.72, 956.74, 956.76, 956.77, 956.79, 956.81, 956.83, 956.84, 956.86, 956.88, 956.89, 956.91, 956.92, 956.94, 956.96, 956.97, 956.99, 957.0, 957.02, 957.03, 957.05, 957.06, 957.08, 957.09, 957.11, 957.12, 957.13, 957.15, 957.16, 957.17, 957.19, 957.2, 957.21, 957.23, 957.24, 957.25, 957.26, 957.27, 957.29, 957.3, 957.31, 957.32, 957.33, 957.34, 957.35, 957.37, 957.38, 957.39, 957.4, 957.41, 957.42, 957.43, 957.44, 957.45, 957.46, 957.46, 957.47, 957.48, 957.49, 957.5, 957.51, 957.52, 957.53, 957.53, 957.54, 957.55, 957.56, 957.57, 957.57, 957.58, 957.59, 957.6, 957.6, 957.61, 957.62, 957.62, 957.63, 957.64, 957.64, 957.65, 957.66, 957.66, 957.67, 957.67, 957.68, 957.69, 957.69, 957.7, 957.7, 957.71, 957.71, 957.72, 957.72, 957.73, 957.73, 957.74, 957.74, 957.75, 957.75, 957.76, 957.76, 957.76, 957.77, 957.77, 957.78, 957.78, 957.78, 957.79, 957.79, 957.8, 957.8, 957.8, 957.81, 957.81, 957.81, 957.82, 957.82, 957.82, 957.83, 957.83, 957.83, 957.84, 957.84, 957.84, 957.84, 957.85, 957.85, 957.85, 957.86, 957.86, 957.86, 957.86, 957.87, 957.87, 957.87, 957.87, 957.87, 957.88, 957.88, 957.88, 957.88, 957.89, 957.89, 957.89, 957.89, 957.89, 957.9, 957.9, 957.9, 957.9, 957.9, 957.9, 957.91, 957.91, 957.91, 957.91, 957.91, 957.91, 957.92, 957.92, 957.92, 957.92, 957.92, 957.92, 957.92, 957.92, 957.93, 957.93, 957.93, 957.93, 957.93, 957.93, 957.93, 957.93, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.94, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.95, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.96, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.97, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.98, 957.97, 957.95]

    DATA = []
    for i in range(7):
        UID = "000"+str(i+1)
        obj = PUSH_RAWDATA(UID,getRawData(UID)["data"],isBinary=True if (i==5 or i == 6) else False)
        max = max_[i]
        min = min_[i]
        DATA.append(str(list(
            np.around(np.array(obj["content"][0])*(float(max)-float(min))+float(min),3)
        )))
        
        print(f"已经计算完成#{UID}")
    print("开始写入数据库...")
    sqltext = [
        f"INSERT INTO `dy`.`app_qualityitem`(`label`, `uid`,`model`,`maxThreshold`,`minThreshold`,`dataColumn`,`maxOrigin`,`minOrigin`,`onPredicting`,`inputDim`,`outputDim`,`onWorking`,`unit`, `data`, `nodeType`, `graphLeft`, `graphRight`, `isBinary`) VALUES  \
        ('XX检验-总长','0001','models/quality/xixi.h5',            '957.77',   '953.33',   '0',    '{max_[0]}', '{min_[0]}', '0', '399', '10', '1','mm','{data0}','工艺参数','90','100', '0'),\
        ('XX检验-摆差','0002','models/quality/0002.h5',            '1.22',   '0',   '0',    '{max_[1]}', '{min_[1]}', '0', '399', '10', '1','mm','{DATA[1]}','工艺参数','90','100', '0'),\
        ('XX检验-点火具电阻','0003','models/quality/0003.h5',            '3.333',   '2',   '0',    '{max_[2]}', '{min_[2]}', '0', '399', '10', '1','Ω','{DATA[2]}','工艺参数','90','100', '0'),\
        ('XX检验-重量','0004','models/quality/0004.h5',            '6.33',   '6.22',   '0',    '{max_[3]}', '{min_[3]}', '0', '399', '10', '1','kg','{DATA[3]}','工艺参数','90','100', '0'),\
        ('XX检验-质心','0005','models/quality/0005.h5',            '1',   '0',   '0',    '{max_[4]}', '{min_[4]}', '0', '399', '10', '1','mm','{DATA[4]}','工艺参数','90','100', '0'),\
        ('XX检验-过膛','0006','models/quality/0006.h5',            '1',   '1',   '0',    '{max_[5]}', '{min_[5]}', '0', '399', '10', '1','-','{DATA[5]}','工艺参数','90','100', '1'),\
        ('XX检验-外观','0007','models/quality/0007.h5',            '1',      '1',        '1',    '{max_[6]}',   '{min_[6]}', '0', '399', '10', '1','-','{DATA[6]}','工艺参数','90','100', '1')\
        ",

        "INSERT INTO `dy`.`app_option`(`key`, `value`) VALUES  \
        ('APIToken','8qs4X,sVGfj=H+U*yscQ}-#6'),\
        ('GraphRefreshTime','3'),\
        ('subSystem','0'),\
        ('userTokenExpires','15')\
        ",

        "INSERT INTO `dy`.`app_registerserialnumber`(`serial`, `serialadmin`) VALUES  \
        ('9qBX0TpwMdV5aCRr',1),\
        ('#TNiMdBn,6Lpq}228P9i}C:j',0)\
        ",

        "INSERT INTO `dy`.`app_userinfo`(`username`, `password`, `avatar`, `date_create`, `useradmin`, `login`) VALUES  \
        ('admin','e10adc3949ba59abbe56e057f20f883e','/src/images/users/default.jpeg','2023-09-15 07:57:55.085103',1,0)\
        ",

        "INSERT INTO `dy`.`app_usermodel`(`username`,`model_cnn`) VALUES  \
        ('admin','models/quality/model_2023_01.h5')\
        ",
    ]

    for i in delete:
        r.execute(i)
    for i in sqltext:
        r.execute(i)
    connection.commit()

    print("写入完成。")